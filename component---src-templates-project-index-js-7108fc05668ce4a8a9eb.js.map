{"version":3,"sources":["webpack:///./src/templates/Project/Images.js","webpack:///./src/templates/Project/Header.js","webpack:///./src/templates/Project/index.js"],"names":["Images","baseClass","extendParentClass","bind","extend","extendBaseClass","renderImages","props","images","map","image","index","fluid","childImageSharp","key","className","render","this","length","Component","Header","title","html","dangerouslySetInnerHTML","__html","Project","data","markdownRemark","frontmatter","thumbnail","contentClass","Layout","parentClass","query"],"mappings":"kXAKO,IA4BQA,EA5Bf,Y,QAAA,wIAKEC,UAAYC,IAAkBC,KAAlB,KAAAD,CAA6B,QAL3C,EAOEE,OAASC,IAAgBF,KAAhB,MAPX,EASEG,aAAe,kBACb,EAAKC,MAAMC,OAAOC,KAAI,SAACC,EAAOC,GAAR,OACpB,kBAAC,IAAD,CACEC,MAAOF,EAAMG,gBAAgBD,MAC7BE,IAAKH,EACLI,UAAW,EAAKX,OAAO,cAd/B,S,EAAA,G,EAAA,G,6EAAA,YAkBEY,OAAA,WAAU,IACAR,EAAWS,KAAKV,MAAhBC,OACR,OACE,yBAAKO,UAAWE,KAAKhB,WAClBO,GAAUA,EAAOU,QAAUD,KAAKX,iBAtBzC,GAA4Ba,a,2HCDrB,IA0BQC,EA1Bf,Y,QAAA,wIAMEnB,UAAYC,IAAkBC,KAAlB,KAAAD,CAA6B,UAN3C,EAQEE,OAASC,IAAgBF,KAAhB,MARX,S,EAAA,G,EAAA,G,6EAAA,YAUEa,OAAA,WAAU,IAAD,EACiBC,KAAKV,MAArBc,EADD,EACCA,MAAOC,EADR,EACQA,KACf,OACE,yBAAKP,UAAWE,KAAKhB,WACnB,4BAAKoB,GACJC,GACC,uBACEC,wBAAyB,CAAEC,OAAQF,GACnCP,UAAWE,KAAKb,OAAO,mBAlBnC,GAA4Be,a,2HCMrB,IAAMM,EAAb,Y,QAAA,wIAaExB,UAAY,UAbd,EAeEG,OAASC,IAAgBF,KAAhB,MAfX,S,EAAA,G,EAAA,G,6EAAA,YAiBEa,OAAA,WAAU,IAAD,EACuBC,KAAKV,MAAMmB,KAAKC,eAAtCC,EADD,EACCA,YAAaN,EADd,EACcA,KACbD,EAA6BO,EAA7BP,MAAOQ,EAAsBD,EAAtBC,UAAWrB,EAAWoB,EAAXpB,OACpBsB,EAAeb,KAAKb,OAAO,WACjC,OACE,kBAAC2B,EAAA,EAAD,KACE,yBAAKhB,UAAWE,KAAKhB,WACnB,kBAAC,EAAD,CAAQ+B,YAAaf,KAAKhB,UAAWoB,MAAOA,EAAOC,KAAMA,IACzD,yBAAKP,UAAWe,GACbD,GACC,kBAAC,IAAD,CACEjB,MAAOiB,EAAUhB,gBAAgBD,MACjCG,UAAWX,YAAO0B,EAAc,eAGpC,kBAAC,EAAD,CAAQtB,OAAQA,EAAQwB,YAAaf,KAAKhB,gBAhCtD,GAA6BkB,aAwChBc,EAAK,aAoCHR","file":"component---src-templates-project-index-js-7108fc05668ce4a8a9eb.js","sourcesContent":["import React, { Component } from 'react'\nimport Image from 'gatsby-image'\nimport { arrayOf, object } from 'prop-types'\nimport { extendParentClass, extendBaseClass } from '../../utils/classes'\n\nexport class Images extends Component {\n  static propTypes = {\n    images: arrayOf(object),\n  }\n\n  baseClass = extendParentClass.bind(this)('list')\n\n  extend = extendBaseClass.bind(this)\n\n  renderImages = () =>\n    this.props.images.map((image, index) => (\n      <Image\n        fluid={image.childImageSharp.fluid}\n        key={index}\n        className={this.extend('item')}\n      />\n    ))\n\n  render() {\n    const { images } = this.props\n    return (\n      <div className={this.baseClass}>\n        {images && images.length && this.renderImages()}\n      </div>\n    )\n  }\n}\n\nexport default Images\n","import React, { Component } from 'react'\nimport { string } from 'prop-types'\nimport { extendParentClass, extendBaseClass } from '../../utils/classes'\n\nexport class Header extends Component {\n  static propTypes = {\n    title: string.isRequired,\n    html: string,\n  }\n\n  baseClass = extendParentClass.bind(this)('header')\n\n  extend = extendBaseClass.bind(this)\n\n  render() {\n    const { title, html } = this.props\n    return (\n      <div className={this.baseClass}>\n        <h1>{title}</h1>\n        {html && (\n          <p\n            dangerouslySetInnerHTML={{ __html: html }}\n            className={this.extend('description')}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Header\n","import React, { Component } from 'react'\nimport Image from 'gatsby-image'\nimport { graphql } from 'gatsby'\nimport { shape, string, arrayOf, object } from 'prop-types'\n\nimport Layout from '../../components/common/Layout'\nimport Images from './Images'\nimport Header from './Header'\nimport { extendBaseClass, extend } from '../../utils/classes'\n\nexport class Project extends Component {\n  static propTypes = {\n    data: shape({\n      markdownRemark: shape({\n        frontmatter: shape({\n          title: string.isRequired,\n          images: arrayOf(object),\n          thumbnail: object.isRequired,\n        }),\n      }),\n    }),\n  }\n\n  baseClass = 'details'\n\n  extend = extendBaseClass.bind(this)\n\n  render() {\n    const { frontmatter, html } = this.props.data.markdownRemark\n    const { title, thumbnail, images } = frontmatter\n    const contentClass = this.extend('content')\n    return (\n      <Layout>\n        <div className={this.baseClass}>\n          <Header parentClass={this.baseClass} title={title} html={html} />\n          <div className={contentClass}>\n            {thumbnail && (\n              <Image\n                fluid={thumbnail.childImageSharp.fluid}\n                className={extend(contentClass, 'thumbnail')}\n              />\n            )}\n            <Images images={images} parentClass={this.baseClass} />\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      fields {\n        slug\n      }\n      html\n      frontmatter {\n        title\n        thumbnail {\n          colors {\n            ...GatsbyImageColors\n          }\n          childImageSharp {\n            fluid(maxWidth: 1920, quality: 100) {\n              ...GatsbyImageSharpFluid\n              ...GatsbyImageSharpFluidLimitPresentationSize\n            }\n          }\n        }\n        images {\n          colors {\n            ...GatsbyImageColors\n          }\n          childImageSharp {\n            fluid(maxWidth: 1920, quality: 100) {\n              ...GatsbyImageSharpFluid\n              ...GatsbyImageSharpFluidLimitPresentationSize\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Project\n"],"sourceRoot":""}