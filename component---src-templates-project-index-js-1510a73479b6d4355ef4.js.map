{"version":3,"sources":["webpack:///./src/templates/Project/Images.js","webpack:///./src/templates/Project/Header.js","webpack:///./src/templates/Project/index.js"],"names":["Images","baseClass","extendParentClass","bind","extend","extendBaseClass","renderImage","image","index","fluid","childImageSharp","key","className","addNewImage","images","newImage","renderImages","props","reduce","render","this","length","Component","Header","title","html","dangerouslySetInnerHTML","__html","Project","data","markdownRemark","frontmatter","thumbnail","contentClass","Layout","parentClass","query"],"mappings":"8qCAKO,IAqCQA,EArCf,Y,QAAA,wIAKEC,UAAYC,IAAkBC,KAAlB,KAAAD,CAA6B,QAL3C,EAOEE,OAASC,IAAgBF,KAAhB,MAPX,EASEG,YAAc,SAACC,EAAOC,GAAR,OACZ,kBAAC,IAAD,CACEC,MAAOF,EAAMG,gBAAgBD,MAC7BE,IAAKH,EACLI,UAAW,EAAKR,OAAO,WAb7B,EAiBES,YAAc,SAACC,EAAQP,EAAOC,GAC5B,GAAID,EAAO,CACT,IAAMQ,EAAW,EAAKT,YAAYC,EAAOC,GACzC,MAAM,GAAN,SAAWM,GAAX,CAAmBC,IAErB,OAAOD,GAtBX,EAyBEE,aAAe,kBAAM,EAAKC,MAAMH,OAAOI,OAAO,EAAKL,YAAa,KAzBlE,S,EAAA,G,EAAA,G,6EAAA,YA2BEM,OAAA,WAAU,IACAL,EAAWM,KAAKH,MAAhBH,OACR,OACE,yBAAKF,UAAWQ,KAAKnB,WAClBa,GAAUA,EAAOO,QAAUD,KAAKJ,iBA/BzC,GAA4BM,a,2HCDrB,IA0BQC,EA1Bf,Y,QAAA,wIAMEtB,UAAYC,IAAkBC,KAAlB,KAAAD,CAA6B,UAN3C,EAQEE,OAASC,IAAgBF,KAAhB,MARX,S,EAAA,G,EAAA,G,6EAAA,YAUEgB,OAAA,WAAU,IAAD,EACiBC,KAAKH,MAArBO,EADD,EACCA,MAAOC,EADR,EACQA,KACf,OACE,yBAAKb,UAAWQ,KAAKnB,WACnB,4BAAKuB,GACJC,GACC,uBACEC,wBAAyB,CAAEC,OAAQF,GACnCb,UAAWQ,KAAKhB,OAAO,mBAlBnC,GAA4BkB,a,2HCMrB,IAAMM,EAAb,Y,QAAA,wIAaE3B,UAAY,UAbd,EAeEG,OAASC,IAAgBF,KAAhB,MAfX,S,EAAA,G,EAAA,G,6EAAA,YAiBEgB,OAAA,WAAU,IAAD,EACuBC,KAAKH,MAAMY,KAAKC,eAAtCC,EADD,EACCA,YAAaN,EADd,EACcA,KACbD,EAA6BO,EAA7BP,MAAOQ,EAAsBD,EAAtBC,UAAWlB,EAAWiB,EAAXjB,OACpBmB,EAAeb,KAAKhB,OAAO,WACjC,OACE,kBAAC8B,EAAA,EAAD,KACE,yBAAKtB,UAAWQ,KAAKnB,WACnB,kBAAC,EAAD,CAAQkC,YAAaf,KAAKnB,UAAWuB,MAAOA,EAAOC,KAAMA,IACzD,yBAAKb,UAAWqB,GACbD,GACC,kBAAC,IAAD,CACEvB,MAAOuB,EAAUtB,gBAAgBD,MACjCG,UAAWR,YAAO6B,EAAc,eAGpC,kBAAC,EAAD,CAAQnB,OAAQA,EAAQqB,YAAaf,KAAKnB,gBAhCtD,GAA6BqB,aAwChBc,EAAK,aAoCHR","file":"component---src-templates-project-index-js-1510a73479b6d4355ef4.js","sourcesContent":["import React, { Component } from 'react'\nimport Image from 'gatsby-image'\nimport { arrayOf, object } from 'prop-types'\nimport { extendParentClass, extendBaseClass } from '../../utils/classes'\n\nexport class Images extends Component {\n  static propTypes = {\n    images: arrayOf(object),\n  }\n\n  baseClass = extendParentClass.bind(this)('list')\n\n  extend = extendBaseClass.bind(this)\n\n  renderImage = (image, index) => (\n    <Image\n      fluid={image.childImageSharp.fluid}\n      key={index}\n      className={this.extend('item')}\n    />\n  )\n\n  addNewImage = (images, image, index) => {\n    if (image) {\n      const newImage = this.renderImage(image, index)\n      return [...images, newImage]\n    }\n    return images\n  }\n\n  renderImages = () => this.props.images.reduce(this.addNewImage, [])\n\n  render() {\n    const { images } = this.props\n    return (\n      <div className={this.baseClass}>\n        {images && images.length && this.renderImages()}\n      </div>\n    )\n  }\n}\n\nexport default Images\n","import React, { Component } from 'react'\nimport { string } from 'prop-types'\nimport { extendParentClass, extendBaseClass } from '../../utils/classes'\n\nexport class Header extends Component {\n  static propTypes = {\n    title: string.isRequired,\n    html: string,\n  }\n\n  baseClass = extendParentClass.bind(this)('header')\n\n  extend = extendBaseClass.bind(this)\n\n  render() {\n    const { title, html } = this.props\n    return (\n      <div className={this.baseClass}>\n        <h1>{title}</h1>\n        {html && (\n          <p\n            dangerouslySetInnerHTML={{ __html: html }}\n            className={this.extend('description')}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Header\n","import React, { Component } from 'react'\nimport Image from 'gatsby-image'\nimport { graphql } from 'gatsby'\nimport { shape, string, arrayOf, object } from 'prop-types'\n\nimport Layout from '../../components/common/Layout'\nimport Images from './Images'\nimport Header from './Header'\nimport { extendBaseClass, extend } from '../../utils/classes'\n\nexport class Project extends Component {\n  static propTypes = {\n    data: shape({\n      markdownRemark: shape({\n        frontmatter: shape({\n          title: string.isRequired,\n          images: arrayOf(object),\n          thumbnail: object.isRequired,\n        }),\n      }),\n    }),\n  }\n\n  baseClass = 'details'\n\n  extend = extendBaseClass.bind(this)\n\n  render() {\n    const { frontmatter, html } = this.props.data.markdownRemark\n    const { title, thumbnail, images } = frontmatter\n    const contentClass = this.extend('content')\n    return (\n      <Layout>\n        <div className={this.baseClass}>\n          <Header parentClass={this.baseClass} title={title} html={html} />\n          <div className={contentClass}>\n            {thumbnail && (\n              <Image\n                fluid={thumbnail.childImageSharp.fluid}\n                className={extend(contentClass, 'thumbnail')}\n              />\n            )}\n            <Images images={images} parentClass={this.baseClass} />\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      fields {\n        slug\n      }\n      html\n      frontmatter {\n        title\n        thumbnail {\n          colors {\n            ...GatsbyImageColors\n          }\n          childImageSharp {\n            fluid(maxWidth: 1920, quality: 100) {\n              ...GatsbyImageSharpFluid\n              ...GatsbyImageSharpFluidLimitPresentationSize\n            }\n          }\n        }\n        images {\n          colors {\n            ...GatsbyImageColors\n          }\n          childImageSharp {\n            fluid(maxWidth: 1920, quality: 100) {\n              ...GatsbyImageSharpFluid\n              ...GatsbyImageSharpFluidLimitPresentationSize\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Project\n"],"sourceRoot":""}