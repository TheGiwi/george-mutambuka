{"version":3,"sources":["webpack:///./src/pages/3d.js","webpack:///./src/components/common/Results/Item/Thumbnail.js","webpack:///./src/components/common/Results/Item/index.js","webpack:///./src/components/common/Results/index.js"],"names":["ThreeDimensionalProjects","render","this","props","title","Component","query","Thumbnail","baseClass","extendParentClass","bind","extend","extendBaseClass","getColor","thumbnail","colors","vibrant","getStyles","backgroundColor","className","style","fluid","childImageSharp","Item","getItemUrl","fields","slug","frontmatter","to","parentClass","Portfolio","listClass","renderItem","edge","index","node","key","renderItems","data","allMarkdownRemark","edges","map","Layout"],"mappings":"kPAIO,IAAMA,EAAb,Y,QAAA,yD,EAAA,G,EAAA,G,6EAAA,YACEC,OAAA,WACE,OAAO,kBAAC,IAAD,iBAAaC,KAAKC,MAAlB,CAAyBC,MAAM,kBAF1C,GAA8CC,aAM/BL,YAER,IAAMM,EAAK,c,6OCPX,IAsCQC,EAtCf,Y,QAAA,wIAKEC,UAAYC,IAAkBC,KAAlB,KAAAD,CAA6B,aAL3C,EAOEE,OAASC,IAAgBF,KAAhB,MAPX,EASEG,SAAW,WAAO,IACRC,EAAc,EAAKX,MAAnBW,UACR,OAAIA,EAAkBA,EAAUC,OAAOC,QAChC,QAZX,EAeEC,UAAY,WAEV,MAAO,CACLC,gBAFsB,EAAKL,aAhBjC,S,EAAA,G,EAAA,G,6EAAA,YAsBEZ,OAAA,WAAU,IACAa,EAAcZ,KAAKC,MAAnBW,UACR,OAAIA,EAEA,yBAAKK,UAAWjB,KAAKM,UAAWY,MAAOlB,KAAKe,aAC1C,kBAAC,IAAD,CACEI,MAAOP,EAAUQ,gBAAgBD,MACjCF,UAAWjB,KAAKS,OAAO,YAKxB,MAlCX,GAA+BN,a,uICCxB,IAiCQkB,EAjCf,Y,QAAA,wIAWEf,UAAYC,IAAkBC,KAAlB,KAAAD,CAA6B,QAX3C,EAaEE,OAASC,IAAgBF,KAAhB,MAbX,EAeEc,WAAa,WAEX,MAAM,YADW,EAAKrB,MAAMsB,OAApBC,MAhBZ,S,EAAA,G,EAAA,G,6EAAA,YAoBEzB,OAAA,WAAU,IAAD,EACsBC,KAAKC,MAAMwB,YAAhCvB,EADD,EACCA,MAAOU,EADR,EACQA,UACf,OACE,kBAAC,OAAD,CAAMK,UAAWjB,KAAKM,UAAWoB,GAAI1B,KAAKsB,cACxC,kBAAC,EAAD,CAAWV,UAAWA,EAAWe,YAAa3B,KAAKM,YACnD,6BACE,4BAAKJ,MA1Bf,GAA0BC,a,2HCAnB,IAAMyB,EAAb,Y,QAAA,wIACEtB,UAAY,YADd,EAYEG,OAASC,IAAgBF,KAAhB,MAZX,EAcEqB,UAAY,EAAKpB,OAAO,QAd1B,EAgBEqB,WAAa,SAACC,EAAMC,GAAP,OACX,kBAAC,EAAD,iBAAUD,EAAKE,KAAf,CAAqBC,IAAKF,EAAOL,YAAa,EAAKE,cAjBvD,EAoBEM,YAAc,kBACZ,EAAKlC,MAAMmC,KAAKC,kBAAkBC,MAAMC,IAAI,EAAKT,aArBrD,S,EAAA,G,EAAA,G,6EAAA,YAuBE/B,OAAA,WAAU,IACAG,EAAUF,KAAKC,MAAfC,MACR,OACE,kBAACsC,EAAA,EAAD,KACE,yBAAKvB,UAAWjB,KAAKM,WACnB,wBAAIW,UAAWjB,KAAKS,OAAO,UAAWP,GACtC,yBAAKe,UAAWjB,KAAK6B,WAAY7B,KAAKmC,kBA7BhD,GAA+BhC,aAoChByB","file":"component---src-pages-3-d-js-7d197f9d039fab195167.js","sourcesContent":["import Results from '../components/common/Results'\nimport { graphql } from 'gatsby'\nimport React, { Component } from 'react'\n\nexport class ThreeDimensionalProjects extends Component {\n  render() {\n    return <Results {...this.props} title=\"3D Projects\" />\n  }\n}\n\nexport default ThreeDimensionalProjects\n\nexport const query = graphql`\n  {\n    allMarkdownRemark(filter: { frontmatter: { type: { eq: \"3d\" } } }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            thumbnail {\n              colors {\n                ...GatsbyImageColors\n              }\n              childImageSharp {\n                fluid(maxWidth: 800, quality: 80) {\n                  ...GatsbyImageSharpFluid_withWebp\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React, { Component } from 'react'\nimport Image from 'gatsby-image'\nimport { object } from 'prop-types'\nimport { extendParentClass, extendBaseClass } from '../../../../utils/classes'\n\nexport class Thumbnail extends Component {\n  static propTypes = {\n    thumbnail: object.isRequired,\n  }\n\n  baseClass = extendParentClass.bind(this)('thumbnail')\n\n  extend = extendBaseClass.bind(this)\n\n  getColor = () => {\n    const { thumbnail } = this.props\n    if (thumbnail) return thumbnail.colors.vibrant\n    return 'gray'\n  }\n\n  getStyles = () => {\n    const backgroundColor = this.getColor()\n    return {\n      backgroundColor,\n    }\n  }\n\n  render() {\n    const { thumbnail } = this.props\n    if (thumbnail) {\n      return (\n        <div className={this.baseClass} style={this.getStyles()}>\n          <Image\n            fluid={thumbnail.childImageSharp.fluid}\n            className={this.extend('image')}\n          />\n        </div>\n      )\n    }\n    return null\n  }\n}\n\nexport default Thumbnail\n","import React, { Component } from 'react'\nimport Thumbnail from './Thumbnail'\nimport { Link } from 'gatsby'\nimport { object, string, shape, arrayOf } from 'prop-types'\nimport { extendParentClass, extendBaseClass } from '../../../../utils/classes'\n\nexport class Item extends Component {\n  static propTypes = {\n    frontmatter: shape({\n      title: string.isRequired,\n      images: arrayOf(object),\n    }).isRequired,\n    fields: shape({\n      slug: string.isRequired,\n    }),\n  }\n\n  baseClass = extendParentClass.bind(this)('item')\n\n  extend = extendBaseClass.bind(this)\n\n  getItemUrl = () => {\n    const { slug } = this.props.fields\n    return `/projects${slug}`\n  }\n\n  render() {\n    const { title, thumbnail } = this.props.frontmatter\n    return (\n      <Link className={this.baseClass} to={this.getItemUrl()}>\n        <Thumbnail thumbnail={thumbnail} parentClass={this.baseClass} />\n        <div>\n          <h3>{title}</h3>\n        </div>\n      </Link>\n    )\n  }\n}\n\nexport default Item\n","import React, { Component } from 'react'\nimport { shape, object, arrayOf, string } from 'prop-types'\nimport Layout from '../Layout'\nimport Item from './Item'\nimport { extendBaseClass } from '../../../utils/classes'\n\nexport class Portfolio extends Component {\n  baseClass = 'portfolio'\n\n  static propTypes = {\n    data: shape({\n      allMarkdownRemark: shape({\n        edges: arrayOf(object).isRequired,\n      }).isRequired,\n    }).isRequired,\n    title: string.isRequired,\n  }\n\n  extend = extendBaseClass.bind(this)\n\n  listClass = this.extend('list')\n\n  renderItem = (edge, index) => (\n    <Item {...edge.node} key={index} parentClass={this.listClass} />\n  )\n\n  renderItems = () =>\n    this.props.data.allMarkdownRemark.edges.map(this.renderItem)\n\n  render() {\n    const { title } = this.props\n    return (\n      <Layout>\n        <div className={this.baseClass}>\n          <h1 className={this.extend('title')}>{title}</h1>\n          <div className={this.listClass}>{this.renderItems()}</div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default Portfolio\n"],"sourceRoot":""}